#!/bin/bash

if [ $# -lt 2 ] ; 
    then echo "$0 <uImage_path> <miner-IP> [-check] [-p PATTERN]"
    exit 1
fi
IMAGE=$1
MINER=$2
CHECK=$3
SSH_PASS=root
PATTERN=0_FW

if [ ! -e $IMAGE ] ;
	then echo "Image file $IMAGE not found"
	exit 2
fi
echo file $IMAGE exist

if [ "$3" == "-p" ] ; then
	PATTERN=$4
fi

if [ "$4" == "-p" ] ; then
	PATTERN=$5
fi



mkimage -l $IMAGE | grep ${PATTERN}  > /dev/null 2>&1
if [ ! $? -eq 0 ] ; 
	then mkimage -l $IMAGE | grep Linux-3.8.13  > /dev/null 2>&1
	if [ ! $? -eq 0 ] ; 
		then echo "\n $IMAGE doesnt seem a valid image file. Aborting!"
		exit 3
	fi
fi
 
echo "${IMAGE} seems valid [`mkimage -l ${IMAGE} | grep Name:`] ."

VER_LINE=`mkimage -l ${IMAGE} | grep Name:`
IMAGE_VER=${VER_LINE:22:30}
FW_MODEL=${VER_LINE:14:4}

#IMAGE_VER=`mkimage -l ${IMAGE} | grep Name: | cut -d : -f 3`


ping -c 1 $MINER > /dev/null 2>&1

if [ ! $? -eq 0 ] ; 
	then echo $MINER is not accessible
	exit 4
fi

echo " ${MINER} accessible"

PINGVER=`dirname $0`/pingver

MINER_CURVER=`${PINGVER} ${MINER} | cut -d , -f 2`
MINER_MODEL=`sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} "cat /model_id" 2>/dev/null` 

if [ "$CHECK" == "-check" ] ; then
	echo -e "\n"
	read -p "....Push Image $IMAGE (ver ${IMAGE_VER}) onto Miner $MINER (cur ver ${MINER_CURVER})?" -n 1 -r
	echo    # (optional) move to a new line
	if [[ ! $REPLY =~ ^[Yy]$ ]] ; then
		echo Aborting
		exit 5
	fi
	CHECK=-force
fi

if [ "$CHECK" != "-force" ] ; then
	if  [ "${MINER_CURVER}" == "${IMAGE_VER}" ] ; then
		echo -e "\n"
		echo ".... Miner ${MINER} already has Image with the same version as ${IMAGE} ( ${IMAGE_VER})"
		echo "Skipping !"
		exit 6
	fi

	if  [ ! "${FW_MODEL}" == "${MINER_MODEL}" ] ; then
		echo -e "\n"
		echo ".... Miner ${MINER} is an ${MINER_MODEL} ; Image file ${IMAGE} is designed for ${FW_MODEL}"
		echo "DITCHING !!"
		exit 7
	fi

fi



#> /dev/null 2>&1
echo "mount /mnt/mmc-boot"
sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} mount /mnt/mmc-boot > /dev/null 2>&1
sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} ls /mnt/mmc-boot/MLO > /dev/null 2>&1
if [ $? -eq 0 ] ; then
	echo scp $IMAGE root@${MINER} :/mnt/mmc-boot/uImage
	sshpass -p ${SSH_PASS} scp -o StrictHostKeyChecking=no $IMAGE root@${MINER}:/mnt/mmc-boot/uImage > /dev/null 2>&1

	echo "sync"
	sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} sync

	echo "umount /mnt/mmc-boot"
	sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} umount /mnt/mmc-boot

else
	echo "${MINER} without MMC. Oh Boy."
fi

echo "mount /mnt/sd-boot"
sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} mount /mnt/sd-boot > /dev/null 2>&1
sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} ls /mnt/sd-boot/MLO > /dev/null 2>&1
if [ $? -eq 0 ] ; then
	echo scp $IMAGE root@${MINER} :/mnt/sd-boot/uImage
	sshpass -p ${SSH_PASS} scp -o StrictHostKeyChecking=no $IMAGE root@${MINER}:/mnt/sd-boot/uImage

	echo "sync"
	sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} sync

	echo "umount /mnt/sd-boot"
	sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} umount /mnt/sd-boot

else
	echo "${MINER} without SD-CARD"
fi

sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} rm -f /mnt/config/etc/bin/* /mnt/mmc-config/etc/bin/* /mnt/config/etc/mg_custom_mode /mnt/mmc-config/etc/mg_custom_mode > /dev/null 2>&1


sleep 3

echo "reboot"
sshpass -p ${SSH_PASS} ssh -o StrictHostKeyChecking=no root@${MINER} /sbin/reboot





