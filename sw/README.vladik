Terms
=====
Root directory -- root directory on host Linux PC where all
   development is done

Overo QEMU image creation
=========================
Use script create-sd-card-image.sh in order to create SD Card image.
Run it from root directory as follows:

./create-sd-card-image.sh

It should create overo-sdcard.img which contains MLO and U-Boot for Overo board.


Overo kernel
============



DHCP and TFTP configuration
===========================
As the default work mode is to take kernel and rootfs from network
DHCP and TFTP servers should be setup and configured.

Windows
-------
On Windows use TFTPD32/64 which is a Windows program which provides both
DHCP and TFTP servers. The configuration is trivial, just select network
interface to work with and TFTP working directory.
TFTPD32 URL is http://tftpd32.jounin.net/.

Linux
-----
Install TFTP server

apt-get install atftpd

and configure it (working directory).

Regarding DHCP there is difference between development and production machines.
Development may use the simplest but limited udhcpd, while production server
shoule use isc-dhcp-server which is very powerfull but more complicated.
See its description here: https://wiki.debian.org/DHCP_Server












Configuration
=============
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- distclean
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- am335x_evm_config
(possible to edit CONFIG_BOOTCOMMAND in am335x_evm.h)


Compilation
===========
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi-


The Results
===========
MLO, u-boot.img


SD Card
=======
Create the 1st primary partition on the SD Card of 32MB size by using cfdisk:

	sudo cfdisk /dev/sdb

The type of the partition is W95 FAT32 (type 0b)

Now format tghe 1st partition of the SD Card:

	sudo mkdosfs /dev/sdb1


Installation
============
Mount the 1st SD Card partition, say to /mnt/usb.
The first file that must be copied is MLO:

	cp MLO /mnt/usb

Then copy U-Boot itself:

	cp u-boot.img /mnt/usb














Buildroot image creation
========================

Install buildroot
-----------------
Go to root directory and unpack it:

tar xf buildroot-2013.05.tar.xz

Configure
---------
Go to buildroot directory and copy config file:

cd buildroot-2013.05
cp ../config/buildroot-2013.05-spondoolies.bbb .config

Build image
-----------

make


Customization
-------------
See file tools/customize-rootfs.sh


Kernel
======

Installation
------------
Go to root directory and unpack archive kernel.tgz:

tar xf linux-3.8.13-spon.tar.xz

Build image
-----------

cd kernel/kernel
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- mrproper
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- spondoolies_defconfig
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- uImage
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- spondoolies.dtb

The results are in arch/arm/boot/uImage and arch/arm/boot/dts/spondoolies.dtb.

NOTE: currently U-Boot looks for am335x-boneblack.dtb.
